apply plugin: 'cn.bestwu.propdeps'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

compileJava.dependsOn(processResources)

dependencies {
  compile('org.apache.camel:camel-spring-boot-starter')
  compile('org.springframework.boot:spring-boot-starter-activemq')
  compile('org.apache.camel:camel-jms-starter')
  compile('org.springframework.boot:spring-boot-starter-integration')
  compile('org.apache.camel:camel-spring-integration-starter')
  //
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-actuator')
  runtime('org.springframework.boot:spring-boot-devtools')
  annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
  testAnnotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
  testImplementation('org.springframework.boot:spring-boot-starter-test')
}

//tag::content[]
dependencyManagement {
  imports {
    mavenBom "org.apache.camel:camel-spring-boot-dependencies:$apacheCamelVersion"
    //end::content[]
    mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
  }
}

springBoot {
  executable = true
}

/*
// spring-boot multi-module preamble:
// this in dependencies closure really doesn't work:
// compile project(':submodule').sourceSets.main.output // dot't do this!

// 1. in spring-boot submodules use next configs:

springBoot {
  enabled = false
}
jar {
  enabled = true
}

// 2. in spring-boot target main module to fix gradle compile build + lombok issue use all of these:

dependencies {
  annotationProcessor(project(':submodule'))
  compileOnly(project(':submodule'))
  compile(project(':submodule'))
}
*/
